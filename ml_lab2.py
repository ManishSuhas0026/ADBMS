# -*- coding: utf-8 -*-
"""ML_Lab2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V6ZK_Cbm9MLQ-8-19eN_uoTvite832eL
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as stats

df=pd.read_csv('/content/Womens Clothing E-Commerce Reviews.csv.zip')

df

df.info()

age_bins = [18, 30, 40, 50, 100]
age_labels = ['18-29', '30-39', '40-49', '50+']

df['age_group'] = pd.cut(df['Age'], bins=age_bins, labels=age_labels, right=False)

print(df)

age_group_counts = df['age_group'].value_counts().sort_index()

plt.bar(age_group_counts.index, age_group_counts.values)
plt.xlabel('Age Group')
plt.ylabel('Number of Customers')
plt.title('Distribution of Customers Across Age Groups')
plt.show()

age_rating_counts = df.groupby(['age_group', 'Rating']).size().unstack()

age_rating_counts.plot(kind='bar', stacked=True, figsize=(10, 6))
plt.xlabel('Age Group')
plt.ylabel('Number of Customers')
plt.title('Distribution of Ratings Across Age Groups')
plt.legend(title='Rating')
plt.show()

cov_matrix = df.cov()
print(cov_matrix)

contingency_table = pd.crosstab(df['Age'], df['Rating'])
contingency_table

plt.figure(figsize=(10, 6))
sns.heatmap(contingency_table, annot=True, cmap='YlGnBu', fmt='d')
plt.title('Contingency Table Heatmap: Age vs. Rating')
plt.xlabel('Rating')
plt.ylabel('Age')
plt.show()

from scipy.stats import chi2_contingency
chi2, pval, dof, expected = chi2_contingency(contingency_table)

print('Chi-square test:', chi2)
print('P-value:', pval)
print('Degrees of freedom:', dof)
print('Expected values:', expected)

hypothesis = 'The age of a customer is positively correlated with the rating given for the product.'

statistic, p_value = stats.pearsonr(df['Age'], df['Rating'])

if p_value < 0.05:
    print('The hypothesis is supported.')
else:
    print('The hypothesis is not supported.')

group1 = np.random.randn(100)
group2 = np.random.randn(100)

plt.boxplot([group1, group2])
plt.xlabel('Group')
plt.ylabel('Variable')
plt.title('Box Plots of Group 1 and Group 2')
plt.show()